// Numbas version: exam_results_page_options
{"name": "Chapter 1 Exercises", "metadata": {"description": "<p>Example exercise for Eng Fun Textbook</p>", "licence": "Creative Commons Attribution-NonCommercial 4.0 International"}, "duration": 0, "percentPass": 0, "showQuestionGroupNames": false, "shuffleQuestionGroups": false, "showstudentname": true, "question_groups": [{"name": "Force Calculations", "pickingStrategy": "all-ordered", "pickQuestions": 1, "questionNames": [""], "variable_overrides": [[]], "questions": [{"name": "Forces in equilibrium 1", "extensions": ["geogebra", "quantities"], "custom_part_types": [{"source": {"pk": 19, "author": {"name": "William Haynes", "pk": 2530}, "edit_page": "/part_type/19/edit"}, "name": "Engineering Accuracy with units", "short_name": "engineering-answer", "description": "<p>A value with units marked right if within an adjustable % error of the correct value. &nbsp;Marked close if within a wider margin of error.</p>", "help_url": "", "input_widget": "string", "input_options": {"correctAnswer": "siground(settings['correctAnswer'],4)", "hint": {"static": true, "value": ""}, "allowEmpty": {"static": true, "value": true}}, "can_be_gap": true, "can_be_step": true, "marking_script": "mark:\nswitch( \n  right and good_units and right_sign, add_credit(1.0,'Correct.'),\n  right and good_units and not right_sign, add_credit(settings['C2'],'Wrong sign.'),\n  right and right_sign and not good_units, add_credit(settings['C2'],'Correct value, but wrong or missing units.'),\n  close and good_units, add_credit(settings['C1'],'Close.'),\n  close and not good_units, add_credit(settings['C3'],'Answer is close, but wrong or missing units.'),\n  incorrect('Wrong answer.')\n)\n\n\ninterpreted_answer:\nqty(student_scalar, student_units)\n\n\n\ncorrect_quantity:\nsettings[\"correctAnswer\"]\n\n\n\ncorrect_units:\nunits(correct_quantity)\n\n\nallowed_notation_styles:\n[\"plain\",\"en\"]\n\nmatch_student_number:\nmatchnumber(studentAnswer,allowed_notation_styles)\n\nstudent_scalar:\nmatch_student_number[1]\n\nstudent_units:\nreplace_regex('ohms','ohm',\n  replace_regex('\u00b0', ' deg',\n    replace_regex('-', ' ' ,\n      studentAnswer[len(match_student_number[0])..len(studentAnswer)])),\"i\")\n\ngood_units:\ntry(\ncompatible(quantity(1, student_units),correct_units),\nmsg,\nfeedback(msg);false)\n\n\nstudent_quantity:\nswitch(not good_units, \n       student_scalar * correct_units, \n       not right_sign,\n       -quantity(student_scalar, student_units),\n       quantity(student_scalar,student_units)\n)\n  \n\n\npercent_error:\ntry(\nscalar(abs((correct_quantity - student_quantity)/correct_quantity))*100  \n,msg,\nif(student_quantity=correct_quantity,0,100))\n   \n\nright:\npercent_error <= settings['right']\n\n\nclose:\nright_sign and percent_error <= settings['close']\n\nright_sign:\nsign(student_scalar) = sign(correct_quantity)", "marking_notes": [{"name": "mark", "description": "This is the main marking note. It should award credit and provide feedback based on the student's answer.", "definition": "switch( \n  right and good_units and right_sign, add_credit(1.0,'Correct.'),\n  right and good_units and not right_sign, add_credit(settings['C2'],'Wrong sign.'),\n  right and right_sign and not good_units, add_credit(settings['C2'],'Correct value, but wrong or missing units.'),\n  close and good_units, add_credit(settings['C1'],'Close.'),\n  close and not good_units, add_credit(settings['C3'],'Answer is close, but wrong or missing units.'),\n  incorrect('Wrong answer.')\n)\n"}, {"name": "interpreted_answer", "description": "A value representing the student's answer to this part.", "definition": "qty(student_scalar, student_units)\n\n"}, {"name": "correct_quantity", "description": "", "definition": "settings[\"correctAnswer\"]\n\n"}, {"name": "correct_units", "description": "", "definition": "units(correct_quantity)\n"}, {"name": "allowed_notation_styles", "description": "", "definition": "[\"plain\",\"en\"]"}, {"name": "match_student_number", "description": "", "definition": "matchnumber(studentAnswer,allowed_notation_styles)"}, {"name": "student_scalar", "description": "", "definition": "match_student_number[1]"}, {"name": "student_units", "description": "<p>Modify&nbsp;the&nbsp;unit portion of&nbsp;the student's answer by</p>\n<p>1. replacing \"ohms\" with \"ohm\" &nbsp;case insensitive</p>\n<p>2.&nbsp;replacing '-'&nbsp;with ' '&nbsp;</p>\n<p>3. replacing '&deg;' with ' deg'&nbsp;</p>\n<p>to allow answers like 10 ft-lb and 30&deg;</p>", "definition": "replace_regex('ohms','ohm',\n  replace_regex('\u00b0', ' deg',\n    replace_regex('-', ' ' ,\n      studentAnswer[len(match_student_number[0])..len(studentAnswer)])),\"i\")"}, {"name": "good_units", "description": "", "definition": "try(\ncompatible(quantity(1, student_units),correct_units),\nmsg,\nfeedback(msg);false)\n"}, {"name": "student_quantity", "description": "<p>This fixes the student answer for two common errors. &nbsp;</p>\n<p>If student_units are wrong&nbsp;&nbsp;- replace with correct units</p>\n<p>If student_scalar has the wrong sign - replace with right sign</p>\n<p>If student makes both errors, only one gets fixed.</p>", "definition": "switch(not good_units, \n       student_scalar * correct_units, \n       not right_sign,\n       -quantity(student_scalar, student_units),\n       quantity(student_scalar,student_units)\n)\n  \n"}, {"name": "percent_error", "description": "", "definition": "try(\nscalar(abs((correct_quantity - student_quantity)/correct_quantity))*100  \n,msg,\nif(student_quantity=correct_quantity,0,100))\n   "}, {"name": "right", "description": "", "definition": "percent_error <= settings['right']\n"}, {"name": "close", "description": "<p>Only marked close if the student actually has the right sign.</p>", "definition": "right_sign and percent_error <= settings['close']"}, {"name": "right_sign", "description": "", "definition": "sign(student_scalar) = sign(correct_quantity) "}], "settings": [{"name": "correctAnswer", "label": "Correct Quantity.", "help_url": "", "hint": "The correct answer given as a JME quantity.", "input_type": "code", "default_value": "", "evaluate": true}, {"name": "right", "label": "% Accuracy for right.", "help_url": "", "hint": "Question will be considered correct if the scalar part of the student's answer is within this % of correct value.", "input_type": "code", "default_value": "0.2", "evaluate": true}, {"name": "close", "label": "% Accuracy for close.", "help_url": "", "hint": "Question will be considered close if the scalar part of the student's answer is within this % of correct value.", "input_type": "code", "default_value": "1.0", "evaluate": true}, {"name": "C1", "label": "Close with units.", "help_url": "", "hint": "Partial Credit for close value with appropriate units. &nbsp;if correct answer is 100 N and close is &plusmn;1%,<br />99 &nbsp;N is accepted.", "input_type": "percent", "default_value": "75"}, {"name": "C2", "label": "No units or wrong sign", "help_url": "", "hint": "Partial credit for forgetting units or using wrong sign.<br />If the correct answer is 100 N, both 100 and -100 N are accepted.", "input_type": "percent", "default_value": "50"}, {"name": "C3", "label": "Close, no units.", "help_url": "", "hint": "Partial Credit for close value but forgotten units.<br />This value would be close&nbsp;if the expected units were provided. &nbsp;If the correct answer is 100 N, and close is &plusmn;1%,<br />99 is accepted.", "input_type": "percent", "default_value": "25"}], "public_availability": "always", "published": true, "extensions": ["quantities"]}], "resources": [["question-resources/Fig1.svg", "/srv/numbas/media/question-resources/Fig1.svg"], ["question-resources/Fig2.svg", "/srv/numbas/media/question-resources/Fig2.svg"], ["question-resources/Fig3.svg", "/srv/numbas/media/question-resources/Fig3.svg"], ["question-resources/Fig3_c0nPdDi.svg", "/srv/numbas/media/question-resources/Fig3_c0nPdDi.svg"]], "navigation": {"allowregen": true, "showfrontpage": false, "preventleave": false}, "contributors": [{"name": "Andrew Burkert", "profile_url": "https://numbas.mathcentre.ac.uk/accounts/profile/19802/"}], "tags": [], "metadata": {"description": "<p>First question on forces in equilibrium.</p>", "licence": "Creative Commons Attribution-NonCommercial 4.0 International"}, "statement": "<p>A load of $W=$ {W} N is suspended from a roof by two cables, A and B.</p>\n<p>Cable A makes an angle&nbsp; $\\theta_1 = $ {theta_1}&deg; with the roof, while cable B makes an angle&nbsp; $\\theta_2 = $ {theta_2}&deg; with the roof.</p>\n<p>{geogebra_applet('cbqunudv',[['angle1',theta_1+'&deg;'],['angle2',theta_2+'&deg;'],['W',W]])}</p>\n<p>Calculate the magnitude of the tension in cables A and B.</p>", "advice": "<h2 style=\"text-align: left;\">Worked Solution</h2>\n<p style=\"text-align: left;\">Given values:</p>\n<p style=\"text-align: left;\">$W = \\var{W}$ N, $\\theta_1 = \\var{theta_1}&deg;$, and $\\theta_2 = \\var{theta_2}&deg;$,&nbsp;</p>\n<p style=\"text-align: left;\"></p>\n<p style=\"text-align: left;\">The solution using a force triangle is as follows:</p>\n<p>{geogebra_applet('ncuhpcre',[['angle1',theta_2+'&deg;'],['angle2',theta_1+'&deg;']])}</p>\n<p>$\\begin{align}<br/>\\frac{T_A}{sin\\ (90^\\circ-\\theta_2)}&amp;=\\frac{W}{sin\\ (\\theta_1+\\theta_2)} &amp; \\frac{T_B}{sin\\ (90^\\circ-\\theta_1)}&amp;=\\frac{W}{sin\\ (\\theta_1+\\theta_2)}\\\\\\\\ T_A&amp;=W\\frac{sin\\ (90^\\circ-\\theta_2)}{sin\\ (\\theta_1+\\theta_2)} &amp; T_B&amp;=W\\frac{sin\\ (90^\\circ-\\theta_1)}{sin\\ (\\theta_1+\\theta_2)}\\\\<br/>T_A&amp;=\\var{W}\\ \\frac{sin\\ (90^\\circ-\\var{theta_2}^\\circ)}{sin\\ (\\var{theta_1}^\\circ+\\var{theta_2}^\\circ)} &amp; T_B&amp;=\\var{W}\\ \\frac{sin\\ (90^\\circ-\\var{theta_1}^\\circ)}{sin\\ (\\var{theta_1}^\\circ+\\var{theta_2})^\\circ}\\\\<br/>T_A&amp;=\\var{T_A} \\&nbsp; \\var{unit} &amp; T_B&amp;=\\var{T_B} \\ \\var{unit}<br/>\\end{align}$</p>\n<p></p>\n<p>The solution using components is as follows:</p>\n<p>{geogebra_applet('rzbj2sxt',[['angle1',theta_1+'&deg;'],['angle2',theta_2+'&deg;'],['W',W]])}</p>\n<p>Since the system is in equilibrium, we can say:</p>\n<p>$\\begin{align}<br/>\\Sigma_x &amp;=0 &nbsp;&amp;&amp;&amp; &nbsp;\\Sigma_y =0 &amp;\\\\<br/>T_Bcos\\theta_2 -T_Acos\\theta_1&amp;=0 &nbsp;&amp; (1) &amp;&amp; T_Asin\\theta_1 +T_Bsin\\theta_2-W=0 &amp;&amp; (2)\\\\<br/>\\end{align}$</p>\n<p>Solve for $T_A$ and $T_B$ using simultaneous equations.</p>\n<p>Rearranging (1)</p>\n<p>&nbsp;$\\begin{align}T_B&amp;=\\frac{T_Acos\\theta_1}{cos\\theta_2} =T_A\\frac{cos\\theta_1}{cos\\theta_2}&amp; &nbsp; (3) \\\\ \\end{align}$</p>\n<p>Substitute (3) into (2)</p>\n<p>$\\begin{align}<br/>T_Asin\\theta_1+T_A\\frac{cos\\theta_1}{cos\\theta_2}sin\\theta_2 -W &amp;=0\\\\<br/>T_A \\left(sin\\theta_1+\\frac{cos\\theta_1}{cos\\theta_2}sin\\theta_2\\right)-W&amp;=0\\\\<br/>T_A&amp;=\\frac{W}{ \\left(sin\\theta_1+\\frac{cos\\theta_1}{cos\\theta_2}sin\\theta_2\\right)}\\\\<br/>T_A&amp;=\\frac{\\var{W}}{ \\left(sin\\ \\var{theta_1}^\\circ+\\frac{cos\\ \\var{theta_1}^\\circ}{cos\\ \\var{theta_2}^\\circ}sin\\ \\var{theta_2}^\\circ\\right)}\\\\<br/>T_A&amp;=\\var{T_A} \\&nbsp; \\var{unit}<br/>\\end{align}$</p>\n<p>Substitute the value of $T_A$ into (3) to find $T_B$</p>\n<p>$\\begin{align}<br/>T_B&amp;=T_A\\frac{cos\\theta_1}{cos\\theta_2}\\\\<br/>T_B&amp;=\\var{T_A}\\ \\frac{cos\\ \\var{theta_1}^\\circ}{cos\\ \\var{theta_2}^\\circ}\\\\<br/>T_B&amp;=\\var{T_B} \\ \\var{unit}<br/>\\end{align}$</p>", "rulesets": {}, "builtin_constants": {"e": true, "pi,\u03c0": true, "i": true}, "constants": [], "variables": {"theta_1": {"name": "theta_1", "group": "Inputs", "definition": "random(65 .. 75#1)", "description": "", "templateType": "randrange", "can_override": false}, "base_angle": {"name": "base_angle", "group": "Inputs", "definition": "random(70 .. 85#1)", "description": "", "templateType": "randrange", "can_override": false}, "theta_2": {"name": "theta_2", "group": "Inputs", "definition": "180-theta_1-base_angle", "description": "", "templateType": "anything", "can_override": false}, "W": {"name": "W", "group": "Inputs", "definition": "random(100 .. 150#10)", "description": "", "templateType": "randrange", "can_override": false}, "T_A": {"name": "T_A", "group": "Outputs", "definition": "siground(W*sin(radians(90-theta_2))/sin(radians(theta_1+theta_2)),3)", "description": "", "templateType": "anything", "can_override": false}, "unit": {"name": "unit", "group": "Ungrouped variables", "definition": "\"N\"", "description": "", "templateType": "string", "can_override": false}, "T_B": {"name": "T_B", "group": "Outputs", "definition": "siground(W*sin(radians(90-theta_1))/sin(radians(theta_1+theta_2)),3)", "description": "", "templateType": "anything", "can_override": false}}, "variablesTest": {"condition": "", "maxRuns": 100}, "ungrouped_variables": ["unit"], "variable_groups": [{"name": "Inputs", "variables": ["base_angle", "theta_1", "theta_2", "W"]}, {"name": "Outputs", "variables": ["T_A", "T_B"]}], "functions": {}, "preamble": {"js": "", "css": ""}, "parts": [{"type": "information", "useCustomName": true, "customName": "Choose solution method", "marks": 0, "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [{"label": "Solve using a vector diagram", "rawLabel": "", "otherPart": 1, "variableReplacements": [], "availabilityCondition": "", "penalty": "", "penaltyAmount": 0, "showPenaltyHint": true, "lockAfterLeaving": false}, {"label": "Solve using components", "rawLabel": "", "otherPart": 2, "variableReplacements": [], "availabilityCondition": "", "penalty": "", "penaltyAmount": 0, "showPenaltyHint": true, "lockAfterLeaving": false}], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "prompt": "<p>Choose the method you want to use to solve this problem</p>"}, {"type": "information", "useCustomName": true, "customName": "Solve using a vector diagram", "marks": 0, "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [{"label": "See the free-body diagram", "rawLabel": "", "otherPart": 3, "variableReplacements": [], "availabilityCondition": "", "penalty": "Viewing free-body diagram", "penaltyAmount": "1", "showPenaltyHint": true, "lockAfterLeaving": false}, {"label": "My solution using a force triangle", "rawLabel": "", "otherPart": 4, "variableReplacements": [], "availabilityCondition": "", "penalty": "", "penaltyAmount": 0, "showPenaltyHint": true, "lockAfterLeaving": false}], "suggestGoingBack": true, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "prompt": "<p>This is the easier method to use for this problem.</p>\n<p>You will need to draw a free-body diagram for the point where the three cables join.</p>\n<p>From this you need to draw a vector diagram.</p>\n<p>The vector diagram will be a closed force triangle.</p>\n<p>You can then use the sine rule to calculate the tension in each of the cables.</p>"}, {"type": "information", "useCustomName": true, "customName": "Solve using components", "marks": 0, "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [{"label": "See the free-body diagram", "rawLabel": "", "otherPart": 3, "variableReplacements": [], "availabilityCondition": "", "penalty": "Viewing free-body diagram", "penaltyAmount": "1", "showPenaltyHint": true, "lockAfterLeaving": false}, {"label": "My solution using components", "rawLabel": "", "otherPart": 7, "variableReplacements": [], "availabilityCondition": "", "penalty": "", "penaltyAmount": 0, "showPenaltyHint": true, "lockAfterLeaving": false}], "suggestGoingBack": true, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "prompt": "<p>This is the harder method to use for this problem as you will need to use simultaneous equations.</p>\n<p>You will need to draw a free-body diagram for the point where the three cables join, establishing a coordinate system indicating the directions of the forces.</p>\n<p>The coordinate system normally has the origin at the point where the cables meet and a horizontal $x$ axis and a vertical $y$ axis</p>\n<p>You can then use the equations for the equilibrium of concurrent forces to solve the problem:</p>\n<p>$\\Sigma F_x=0$ and $\\Sigma F_y=0$</p>"}, {"type": "information", "useCustomName": true, "customName": "See the free-body diagram", "marks": 0, "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": true, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "prompt": "<p>Let $W$ be the weight of the load, $T_A$ be the tension in cable A, and $T_B$ be in the tension in cable B.</p>\n<p>Let $\\theta_1$ and $\\theta_2$ be the angles cable A and cable B make to the horizonal respectively. These are the same as the angles the cables make with the roof as they are alternate angles.</p>\n<p>Your free-body dagram should look like this:</p>\n<p>{geogebra_applet('rzbj2sxt',[['angle1',theta_1+'&deg;'],['angle2',theta_2+'&deg;'],['W',W]])}</p>"}, {"type": "gapfill", "useCustomName": true, "customName": "My solution using a force triangle", "marks": 0, "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [{"label": "See the force triangle", "rawLabel": "", "otherPart": 6, "variableReplacements": [], "availabilityCondition": "", "penalty": "Viewing the force triangle", "penaltyAmount": "1", "showPenaltyHint": true, "lockAfterLeaving": false}, {"label": "See method for solving by force triangle", "rawLabel": "", "otherPart": 5, "variableReplacements": [], "availabilityCondition": "", "penalty": "Viewing the method", "penaltyAmount": "1", "showPenaltyHint": true, "lockAfterLeaving": false}], "suggestGoingBack": true, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "prompt": "<p>From your force triangle, use the sine rule to calculate the tension in each cable.</p>\n<p>Enter your solution to 3 sf and include units.</p>\n<p>$T_{A}$ = [[0]]</p>\n<p>$T_{B}$ = [[1]]</p>\n<p></p>", "gaps": [{"type": "engineering-answer", "useCustomName": true, "customName": "Tension in cable A", "marks": "4", "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": "Tension in cable A", "settings": {"correctAnswer": "qty(t_a, unit)", "right": "0.5", "close": "5", "C1": "75", "C2": "50", "C3": "25"}}, {"type": "engineering-answer", "useCustomName": true, "customName": "Tension in cable B", "marks": "4", "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": "Tension in cable B", "settings": {"correctAnswer": "qty(t_b, unit)", "right": "0.5", "close": "5", "C1": "75", "C2": "50", "C3": "25"}}], "sortAnswers": false}, {"type": "information", "useCustomName": true, "customName": "See method for solving by force triangle", "marks": 0, "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": true, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "prompt": "<p style=\"text-align: left;\">The sine rule $\\frac{a}{sin\\ A}=\\frac{b}{sin\\ B}=\\frac{c}{sin\\ C}$ can be used twice in your force triangle to find the tension in each of the cables.</p>\n<p>{geogebra_applet('dweqdfpv',[['angle1',theta_2+'&deg;'],['angle2',theta_1+'&deg;']])}</p>\n<p>$\\begin{align}<br/>\\frac{T_A}{sin\\ (90^\\circ-\\theta_2)}&amp;=\\frac{W}{sin\\ (\\theta_1+\\theta_2)} &amp; \\frac{T_B}{sin\\ (90^\\circ-\\theta_1)}&amp;=\\frac{W}{sin\\ (\\theta_1+\\theta_2)}\\\\\\\\ T_A&amp;=W\\frac{sin\\ (90^\\circ-\\theta_2)}{sin\\ (\\theta_1+\\theta_2)} &amp; T_B&amp;=W\\frac{sin\\ (90^\\circ-\\theta_1)}{sin\\ (\\theta_1+\\theta_2)}\\\\\\\\<br/>\\end{align}$</p>"}, {"type": "information", "useCustomName": true, "customName": "See the force triangle", "marks": 0, "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": true, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "prompt": "<p>We draw the force triangle by drawing each of the three forces in the free-body diagram in turn. The tail of each force vector should join the head of the previous vector. As the forces are in equilibrium, the final diagram will be a closed triangle.&nbsp;</p>\n<p>Your force triangle should look like this if you have drawn the vectors in the order $W$, $T_B$, and $T_A$.</p>\n<p>{geogebra_applet('ncuhpcre',[['angle1',theta_2+'&deg;'],['angle2',theta_1+'&deg;']])}</p>\n<p>If you need help on how to construct the force triangle click on the &lt;- button on the diagram and then use the the &gt;&gt; button to step through the construction process as shown below.</p>\n<ol>\n<li>Start by placing point A at your origin.</li>\n<li>Draw force $W$ straight down from point A with an appropriate length, and place point B&nbsp;at its tip. The length of this vector represents the weight.</li>\n<li>We know the direction of the tension force $T_B$ but not its magnitude. For now, just draw a line passing through point B with an angle of {theta_2}&deg; above the horizontal.</li>\n<li>Similarly we know the direction of the tension force $T_A$. So draw another line passing through point A with an angle of {theta_1}&deg; below the horizontal.</li>\n<li>Call the point where the two lines intersect, C. Points A, B and C now define the force triangle.</li>\n<li>Draw the tension force&nbsp;$T_B$ from point B to point C.</li>\n<li>Draw the tension force&nbsp;$T_A$ from point C back to point A.</li>\n<li>Determine angle A ($\\angle A$ = 90&deg;-{theta_1}&deg; = {90-theta_1}&deg;)&nbsp;</li>\n<li>Determine angle B ($\\angle B$ = 90&deg;-{theta_2}&deg; = {90-theta_2}&deg;)&nbsp;</li>\n<li>Determine angle C ($\\angle C$ = {theta_1}&deg;+{theta_2}&deg; = {theta_1+theta_2}&deg;)</li>\n</ol>\n<ol></ol>\n<p></p>"}, {"type": "gapfill", "useCustomName": true, "customName": "My solution using components", "marks": 0, "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [{"label": "See method for solving by components", "rawLabel": "", "otherPart": 8, "variableReplacements": [], "availabilityCondition": "", "penalty": "Viewing the method", "penaltyAmount": "1", "showPenaltyHint": true, "lockAfterLeaving": false}], "suggestGoingBack": true, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "prompt": "<p>From your free-body diagram, use simultaneous equations to calculate the tension in each cable.</p>\n<p>Enter your solution to 3 sf and include units.</p>\n<p>$T_{A}$ = [[0]]</p>\n<p>$T_{B}$ = [[1]]</p>", "gaps": [{"type": "engineering-answer", "useCustomName": true, "customName": "Tension in cable A", "marks": "4", "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": false, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": "Tension in cable A", "settings": {"correctAnswer": "qty(t_a, unit)", "right": "0.5", "close": "5", "C1": "75", "C2": "50", "C3": "25"}}, {"type": "engineering-answer", "useCustomName": true, "customName": "Tension in cable B", "marks": "4", "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": false, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": "Tension in cable B", "alternatives": [{"type": "engineering-answer", "useCustomName": false, "customName": "", "marks": 0, "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "alternativeFeedbackMessage": "", "useAlternativeFeedback": false, "settings": {"correctAnswer": "qty(t_b, unit)", "right": "0.5", "close": "5", "C1": "75", "C2": "50", "C3": "25"}}], "settings": {"correctAnswer": "qty(t_b, unit)", "right": "0.5", "close": "5", "C1": "75", "C2": "50", "C3": "25"}}], "sortAnswers": false}, {"type": "information", "useCustomName": true, "customName": "See method for solving by components", "marks": 0, "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": true, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "prompt": "<p>{geogebra_applet('rzbj2sxt',[['angle1',theta_1+'&deg;'],['angle2',theta_2+'&deg;'],['W',W]])}</p>\n<p>Since the system is in equilibrium, we can say:</p>\n<p>$\\begin{align}<br/>\\Sigma_x &amp;=0 &nbsp;&amp;&amp;&amp; &nbsp;\\Sigma_y =0 &amp;\\\\<br/>T_Bcos\\theta_2 -T_Acos\\theta_1&amp;=0 &nbsp;&amp; (1) &amp;&amp; T_Asin\\theta_1 +T_Bsin\\theta_2-W=0 &amp;&amp; (2)\\\\<br/>\\end{align}$</p>\n<p>Solve for $T_A$ and $T_B$ using simultaneous equations.</p>\n<p>Rearranging (1)</p>\n<p>&nbsp;$\\begin{align}T_B&amp;=\\frac{T_Acos\\theta_1}{cos\\theta_2} =T_A\\frac{cos\\theta_1}{cos\\theta_2}&amp; &nbsp; (3) \\\\ \\end{align}$</p>\n<p>Substitute (3) into (2)</p>\n<p>$\\begin{align}<br/>T_Asin\\theta_1+T_A\\frac{cos\\theta_1}{cos\\theta_2}sin\\theta_2 -W &amp;=0\\\\<br/>T_A \\left(sin\\theta_1+\\frac{cos\\theta_1}{cos\\theta_2}sin\\theta_2\\right)-W&amp;=0\\\\<br/>T_A&amp;=\\frac{W}{ \\left(sin\\theta_1+\\frac{cos\\theta_1}{cos\\theta_2}sin\\theta_2\\right)}<br/>\\end{align}$</p>\n<p>Substitute the value of $T_A$ into (3) to find $T_B$</p>\n<p></p>"}], "partsMode": "explore", "maxMarks": "8", "objectives": [{"name": "Tension in cable A", "limit": "4"}, {"name": "Tension in cable B", "limit": "4"}], "penalties": [{"name": "Viewing free-body diagram", "limit": "1"}, {"name": "Viewing the force triangle", "limit": "1"}, {"name": "Viewing the method", "limit": "1"}], "objectiveVisibility": "when-active", "penaltyVisibility": "when-active"}]}], "allowPrinting": true, "navigation": {"allowregen": true, "reverse": true, "browse": true, "allowsteps": true, "showfrontpage": true, "showresultspage": "oncompletion", "navigatemode": "menu", "onleave": {"action": "none", "message": ""}, "preventleave": true, "startpassword": ""}, "timing": {"allowPause": true, "timeout": {"action": "none", "message": ""}, "timedwarning": {"action": "none", "message": ""}}, "feedback": {"showactualmark": true, "showtotalmark": true, "showanswerstate": true, "allowrevealanswer": true, "advicethreshold": 0, "intro": "", "end_message": "", "reviewshowscore": true, "reviewshowfeedback": true, "reviewshowexpectedanswer": true, "reviewshowadvice": true, "feedbackmessages": []}, "diagnostic": {"knowledge_graph": {"topics": [], "learning_objectives": []}, "script": "diagnosys", "customScript": ""}, "contributors": [{"name": "Andrew Burkert", "profile_url": "https://numbas.mathcentre.ac.uk/accounts/profile/19802/"}], "extensions": ["/srv/numbas/media/user-extensions/extracted/41/geogebra", "/srv/numbas/media/user-extensions/extracted/55/quantities"], "custom_part_types": [{"source": {"pk": 19, "author": {"name": "William Haynes", "pk": 2530}, "edit_page": "/part_type/19/edit"}, "name": "Engineering Accuracy with units", "short_name": "engineering-answer", "description": "<p>A value with units marked right if within an adjustable % error of the correct value. &nbsp;Marked close if within a wider margin of error.</p>", "help_url": "", "input_widget": "string", "input_options": {"correctAnswer": "siground(settings['correctAnswer'],4)", "hint": {"static": true, "value": ""}, "allowEmpty": {"static": true, "value": true}}, "can_be_gap": true, "can_be_step": true, "marking_script": "mark:\nswitch( \n  right and good_units and right_sign, add_credit(1.0,'Correct.'),\n  right and good_units and not right_sign, add_credit(settings['C2'],'Wrong sign.'),\n  right and right_sign and not good_units, add_credit(settings['C2'],'Correct value, but wrong or missing units.'),\n  close and good_units, add_credit(settings['C1'],'Close.'),\n  close and not good_units, add_credit(settings['C3'],'Answer is close, but wrong or missing units.'),\n  incorrect('Wrong answer.')\n)\n\n\ninterpreted_answer:\nqty(student_scalar, student_units)\n\n\n\ncorrect_quantity:\nsettings[\"correctAnswer\"]\n\n\n\ncorrect_units:\nunits(correct_quantity)\n\n\nallowed_notation_styles:\n[\"plain\",\"en\"]\n\nmatch_student_number:\nmatchnumber(studentAnswer,allowed_notation_styles)\n\nstudent_scalar:\nmatch_student_number[1]\n\nstudent_units:\nreplace_regex('ohms','ohm',\n  replace_regex('\u00b0', ' deg',\n    replace_regex('-', ' ' ,\n      studentAnswer[len(match_student_number[0])..len(studentAnswer)])),\"i\")\n\ngood_units:\ntry(\ncompatible(quantity(1, student_units),correct_units),\nmsg,\nfeedback(msg);false)\n\n\nstudent_quantity:\nswitch(not good_units, \n       student_scalar * correct_units, \n       not right_sign,\n       -quantity(student_scalar, student_units),\n       quantity(student_scalar,student_units)\n)\n  \n\n\npercent_error:\ntry(\nscalar(abs((correct_quantity - student_quantity)/correct_quantity))*100  \n,msg,\nif(student_quantity=correct_quantity,0,100))\n   \n\nright:\npercent_error <= settings['right']\n\n\nclose:\nright_sign and percent_error <= settings['close']\n\nright_sign:\nsign(student_scalar) = sign(correct_quantity)", "marking_notes": [{"name": "mark", "description": "This is the main marking note. It should award credit and provide feedback based on the student's answer.", "definition": "switch( \n  right and good_units and right_sign, add_credit(1.0,'Correct.'),\n  right and good_units and not right_sign, add_credit(settings['C2'],'Wrong sign.'),\n  right and right_sign and not good_units, add_credit(settings['C2'],'Correct value, but wrong or missing units.'),\n  close and good_units, add_credit(settings['C1'],'Close.'),\n  close and not good_units, add_credit(settings['C3'],'Answer is close, but wrong or missing units.'),\n  incorrect('Wrong answer.')\n)\n"}, {"name": "interpreted_answer", "description": "A value representing the student's answer to this part.", "definition": "qty(student_scalar, student_units)\n\n"}, {"name": "correct_quantity", "description": "", "definition": "settings[\"correctAnswer\"]\n\n"}, {"name": "correct_units", "description": "", "definition": "units(correct_quantity)\n"}, {"name": "allowed_notation_styles", "description": "", "definition": "[\"plain\",\"en\"]"}, {"name": "match_student_number", "description": "", "definition": "matchnumber(studentAnswer,allowed_notation_styles)"}, {"name": "student_scalar", "description": "", "definition": "match_student_number[1]"}, {"name": "student_units", "description": "<p>Modify&nbsp;the&nbsp;unit portion of&nbsp;the student's answer by</p>\n<p>1. replacing \"ohms\" with \"ohm\" &nbsp;case insensitive</p>\n<p>2.&nbsp;replacing '-'&nbsp;with ' '&nbsp;</p>\n<p>3. replacing '&deg;' with ' deg'&nbsp;</p>\n<p>to allow answers like 10 ft-lb and 30&deg;</p>", "definition": "replace_regex('ohms','ohm',\n  replace_regex('\u00b0', ' deg',\n    replace_regex('-', ' ' ,\n      studentAnswer[len(match_student_number[0])..len(studentAnswer)])),\"i\")"}, {"name": "good_units", "description": "", "definition": "try(\ncompatible(quantity(1, student_units),correct_units),\nmsg,\nfeedback(msg);false)\n"}, {"name": "student_quantity", "description": "<p>This fixes the student answer for two common errors. &nbsp;</p>\n<p>If student_units are wrong&nbsp;&nbsp;- replace with correct units</p>\n<p>If student_scalar has the wrong sign - replace with right sign</p>\n<p>If student makes both errors, only one gets fixed.</p>", "definition": "switch(not good_units, \n       student_scalar * correct_units, \n       not right_sign,\n       -quantity(student_scalar, student_units),\n       quantity(student_scalar,student_units)\n)\n  \n"}, {"name": "percent_error", "description": "", "definition": "try(\nscalar(abs((correct_quantity - student_quantity)/correct_quantity))*100  \n,msg,\nif(student_quantity=correct_quantity,0,100))\n   "}, {"name": "right", "description": "", "definition": "percent_error <= settings['right']\n"}, {"name": "close", "description": "<p>Only marked close if the student actually has the right sign.</p>", "definition": "right_sign and percent_error <= settings['close']"}, {"name": "right_sign", "description": "", "definition": "sign(student_scalar) = sign(correct_quantity) "}], "settings": [{"name": "correctAnswer", "label": "Correct Quantity.", "help_url": "", "hint": "The correct answer given as a JME quantity.", "input_type": "code", "default_value": "", "evaluate": true}, {"name": "right", "label": "% Accuracy for right.", "help_url": "", "hint": "Question will be considered correct if the scalar part of the student's answer is within this % of correct value.", "input_type": "code", "default_value": "0.2", "evaluate": true}, {"name": "close", "label": "% Accuracy for close.", "help_url": "", "hint": "Question will be considered close if the scalar part of the student's answer is within this % of correct value.", "input_type": "code", "default_value": "1.0", "evaluate": true}, {"name": "C1", "label": "Close with units.", "help_url": "", "hint": "Partial Credit for close value with appropriate units. &nbsp;if correct answer is 100 N and close is &plusmn;1%,<br />99 &nbsp;N is accepted.", "input_type": "percent", "default_value": "75"}, {"name": "C2", "label": "No units or wrong sign", "help_url": "", "hint": "Partial credit for forgetting units or using wrong sign.<br />If the correct answer is 100 N, both 100 and -100 N are accepted.", "input_type": "percent", "default_value": "50"}, {"name": "C3", "label": "Close, no units.", "help_url": "", "hint": "Partial Credit for close value but forgotten units.<br />This value would be close&nbsp;if the expected units were provided. &nbsp;If the correct answer is 100 N, and close is &plusmn;1%,<br />99 is accepted.", "input_type": "percent", "default_value": "25"}], "public_availability": "always", "published": true, "extensions": ["quantities"]}], "resources": [["question-resources/Fig1.svg", "/srv/numbas/media/question-resources/Fig1.svg"], ["question-resources/Fig2.svg", "/srv/numbas/media/question-resources/Fig2.svg"], ["question-resources/Fig3.svg", "/srv/numbas/media/question-resources/Fig3.svg"], ["question-resources/Fig3_c0nPdDi.svg", "/srv/numbas/media/question-resources/Fig3_c0nPdDi.svg"]]}